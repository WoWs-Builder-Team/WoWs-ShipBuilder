@using System.Collections.Specialized
@using System.Collections.ObjectModel
@using WoWsShipBuilder.Common.Infrastructure.Localization
@using WoWsShipBuilder.Core.Data
@using WoWsShipBuilder.ViewModels.Other
@using WoWsShipBuilder.Web.Utility

@implements IDisposable
@inject ILocalizer Localizer

<MudDialog ContentStyle="max-height: calc(90vh - 100px); overflow-y: scroll; padding: 8px 16px;">
    <DialogContent>
        <MudGrid Justify="Justify.SpaceAround">
            <MudItem xs="8">
                <ShipSelector AllowCopies LargerList SelectedShips="@selectedShips"/>
            </MudItem>
            <MudItem xs="3">
                <MudPaper Outlined Style="margin-top: 6px">
                    <MudList Style="height: 47.3vh; overflow-y: scroll;" Dense>
                        @if (!ShipList!.Any())
                        {
                            <MudListItem>
                                <MudText Color="Color.Primary" Align="Align.Center">
                                    @Localizer.GetAppLocalization(Translation.ShipAndShellsSelectionDialog_NoShipSelected).Localization
                                </MudText>
                            </MudListItem>
                        }
                        else
                        {
                            foreach (var ship in ShipList!)
                            {
                                <MudListItem>
                                    <MudStack Row Style="align-items: center" Justify="Justify.SpaceBetween">
                                        <MudStack>
                                            <MudText>
                                                @(!ship.Ship.Name.Equals("customShip") ? Localizer.GetGameLocalization(ship.Ship.Index + "_FULL").Localization : ship.Ship.Index)
                                            </MudText>
                                            <MudText Style="text-overflow: ellipsis; overflow: hidden" Typo="Typo.body2" Class="ml-2 mt-n2">
                                                @(Localizer.GetAppLocalization(Translation.ChartsWeb_Build).Localization + ": " + (!string.IsNullOrWhiteSpace(ship.Build?.BuildName) ? ship.Build.BuildName : ShipComparisonViewModel.DefaultBuildName))
                                            </MudText>
                                        </MudStack>
                                        <MudIcon Icon="@Icons.Material.Filled.Close" @onclick="@(_ => RemoveShip(ship))" Style="cursor: pointer"/>
                                    </MudStack>
                                </MudListItem>
                            }
                        }
                    </MudList>
                </MudPaper>
            </MudItem>
        </MudGrid>
    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" DisableElevation="true" OnClick="@Cancel">
            @Localizer.GetAppLocalization(nameof(Translation.Cancel)).Localization
        </MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Warning" DisableElevation="true" Disabled="@(ShipList != null && ShipList!.Count == 0)" OnClick="@(() => SubmitShips(true))">
            @if (processing)
            {
                <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true"/>
                <MudText Class="ms-2" Typo="Typo.button">
                    @Localizer.GetAppLocalization(nameof(Translation.ShipAndShellSelectionDialogWeb_Loading)).Localization
                </MudText>
            }
            else
            {
                <MudText Typo="Typo.button">
                    @Localizer.GetAppLocalization(nameof(Translation.ShipSelectionWindow_EditBuilds)).Localization
                </MudText>
            }
        </MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Success" DisableElevation="true" OnClick="@(() => SubmitShips(false))">
            @if (processing)
            {
                <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true"/>
                <MudText Class="ms-2" Typo="Typo.button">
                    @Localizer.GetAppLocalization(nameof(Translation.ShipAndShellSelectionDialogWeb_Loading)).Localization
                </MudText>
            }
            else
            {
                <MudText Typo="Typo.button">
                    @Localizer.GetAppLocalization(nameof(Translation.ShipSelectionWindow_ConfirmButton)).Localization
                </MudText>
            }
        </MudButton>
    </DialogActions>
</MudDialog>

@code {

    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; } = null!;

    [Parameter]
    public List<ShipBuildContainer>? ShipList { get; set; }

    private readonly ObservableCollection<ShipBuildContainer> selectedShips = new();

    bool processing;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        ShipList ??= new();
        selectedShips.CollectionChanged += SelectedShipsOnCollectionChanged;
    }

    private void Cancel()
    {
        MudDialog.Cancel();
    }

    private void SubmitShips(bool shouldOpenBuildDialog)
    {
        processing = true;
        StateHasChanged();
        MudDialog.Close(new ShipBuildContainerSelectionDialogOutput(ShipList!, shouldOpenBuildDialog));
    }

    private void SelectedShipsOnCollectionChanged(object? sender, NotifyCollectionChangedEventArgs e)
    {
        if (e.NewItems![0] is ShipBuildContainer container)
        {
            ShipList!.Add(container);
        }
        StateHasChanged();
    }

    public void Dispose()
    {
        selectedShips.CollectionChanged -= SelectedShipsOnCollectionChanged;
    }

    private void RemoveShip(ShipBuildContainer shipBuildContainer)
    {
        ShipList!.Remove(shipBuildContainer);
    }

}