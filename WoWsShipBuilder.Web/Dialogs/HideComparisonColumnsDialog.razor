@using WoWsShipBuilder.ViewModels.Other
@inject ILocalizer Localizer

<MudDialog Style="max-height: 95vh" DefaultFocus="DefaultFocus.Element">
    <DialogContent>
        <div style="max-height: 85vh; overflow: scroll;">
            <MudText Typo="Typo.body2" Align="Align.Center" Style="font-weight: bold" Class="mb-1">@Localizer.SimpleAppLocalization(nameof(Translation.ShipComparison_ActiveColumns)).ToUpper()</MudText>
            <MudStack Row>
                @foreach (var (section, columns) in structure)
                {
                    <MudPaper Outlined Elevation="0" Square="true" @key="@(section.ShipComparisonDataSectionToString())">
                        <MudStack Justify="Justify.Center" AlignItems="AlignItems.Center">
                            <MudText Typo="Typo.body2" Align="Align.Center" Style="font-weight: bold">
                                @(section.LocalizeShipComparisonDataSection(Localizer).ToUpper())
                            </MudText>
                            @foreach (var column in columns)
                            {
                                <MudSwitch @bind-Checked="@(structure[section][column.Key])" Label="@column.Key" LabelPosition="LabelPosition.Start" Size="Size.Medium" Color="Color.Warning" @key="@($"{section}_{column}")" Style="width: 100%; padding-right: 4px;" />
                            }
                        </MudStack>
                    </MudPaper>
                }
            </MudStack>
        </div>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel" Variant="Variant.Text">@Localizer.GetAppLocalization(nameof(Translation.Cancel)).Localization</MudButton>
        <MudButton OnClick="Confirm" Variant="Variant.Text">@Localizer.GetAppLocalization(nameof(Translation.Dialog_Save)).Localization</MudButton>
    </DialogActions>
</MudDialog>

@code
{
    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; } = new();

    [Parameter, EditorRequired]
    public Dictionary<string, bool> HiddenColumns { get; set; } = new();

    private readonly Dictionary<ShipComparisonDataSections, Dictionary<string, bool>> structure = new();

    protected override void OnInitialized()
    {
        base.OnInitialized();

        foreach (string key in HiddenColumns.Keys)
        {
            string[] split = key.Split('_');
            var section = Enum.Parse<ShipComparisonDataSections>(split[0]);
            if (structure.TryGetValue(section, out Dictionary<string, bool>? dataSection))
            {
                dataSection.Add(split[1], !HiddenColumns[key]);
            }
            else
            {
                structure.Add(section, new() { { split[1], !HiddenColumns[key] } });
            }
        }
    }

    private void Cancel()
    {
        MudDialog.Cancel();
    }

    private void Confirm()
    {
        Dictionary<string, bool> result = new();
        foreach (var section in structure)
        {
            foreach (var column in section.Value)
            {
                result.Add($"{section.Key.ShipComparisonDataSectionToString()}_{column.Key}", !column.Value);
            }
        }

        MudDialog.Close(DialogResult.Ok(result));
    }
}