@using WoWsShipBuilder.ViewModels.Helper
@using WoWsShipBuilder.ViewModels.Other
@using System.Globalization
@using WoWsShipBuilder.Core.Data
@using WoWsShipBuilder.Core.DataContainers
@code {

    // Parameter needs to be named __builder, otherwise compilation will fail.
    // ReSharper disable once InconsistentNaming UnusedParameter.Local
    public static readonly RenderFragment<(ShipComparisonDataSections section, ILocalizer localizer, Dictionary<string, bool> hiddenColumns, int range)> MainBatteryDataFragment = element => __builder =>
    {
        bool hide = element.section != ShipComparisonDataSections.MainBattery;

        NumberFormatInfo nfi = default!;
        if (!hide)
        {
            nfi = (NumberFormatInfo)CultureInfo.InvariantCulture.NumberFormat.Clone();
            nfi.NumberGroupSeparator = "'";
        }

        var columnTitleCaliber = $"{element.localizer.SimpleAppLocalization(nameof(Translation.ShipComparison_Caliber))} ({element.localizer.SimpleAppLocalization(Translation.Unit_MM)})";
        var columnTitleBarrels = $"{element.localizer.SimpleAppLocalization(nameof(Translation.ShipComparison_Barrels))}";
        var columnTitleMaxRange = $"{element.localizer.SimpleAppLocalization(nameof(Translation.ShipComparison_MaxRange))} ({element.localizer.SimpleAppLocalization(Translation.Unit_KM)})";
        var columnTitleTurnTime = $"{element.localizer.SimpleAppLocalization(nameof(Translation.ShipStats_TurnTime))} ({element.localizer.SimpleAppLocalization(Translation.Unit_S)})";

        <TemplateColumn Hidden="@(hide && element.hiddenColumns[$"{element.section}_{columnTitleCaliber}"])" T="ShipBuildContainer" Title="@columnTitleCaliber" HeaderClass="column-text-center" CellClass="column-text-center">
            <CellTemplate>
                @if (context.Item.ShipDataContainer?.MainBatteryDataContainer is not null)
                {
                    <MudText Typo="Typo.body2">
                        @context.Item.ShipDataContainer.MainBatteryDataContainer.GunCaliber
                    </MudText>
                }
                else
                {
                    <MudText Typo="Typo.body2" Color="Color.Primary">
                        @ShipComparisonViewModel.DataNotAvailable
                    </MudText>
                }
            </CellTemplate>
        </TemplateColumn>

        <TemplateColumn Hidden="@(hide && element.hiddenColumns[$"{element.section}_{columnTitleBarrels}"])" T="ShipBuildContainer" Title="@columnTitleBarrels" HeaderClass="column-text-center" CellClass="column-text-center">
            <CellTemplate>
                @if (context.Item.ShipDataContainer?.MainBatteryDataContainer?.BarrelsCount is not null && context.Item.ShipDataContainer?.MainBatteryDataContainer?.BarrelsLayout is not null)
                {
                    <MudText Typo="Typo.body2">
                        @($"{context.Item.ShipDataContainer.MainBatteryDataContainer.BarrelsCount} ({context.Item.ShipDataContainer.MainBatteryDataContainer.BarrelsLayout})")
                    </MudText>
                }
                else
                {
                    <MudText Typo="Typo.body2" Color="Color.Primary">
                        @ShipComparisonViewModel.DataNotAvailable
                    </MudText>
                }
            </CellTemplate>
        </TemplateColumn>

        <TemplateColumn Hidden="@(hide && element.hiddenColumns[$"{element.section}_{columnTitleMaxRange}"])" T="ShipBuildContainer" Title="@columnTitleMaxRange" HeaderClass="column-text-center" CellClass="column-text-center">
            <CellTemplate>
                @if (context.Item.ShipDataContainer?.MainBatteryDataContainer?.Range is not null)
                {
                    <MudText Typo="Typo.body2">
                        @context.Item.ShipDataContainer.MainBatteryDataContainer.Range
                    </MudText>
                }
                else
                {
                    <MudText Typo="Typo.body2" Color="Color.Primary">
                        @ShipComparisonViewModel.DataNotAvailable
                    </MudText>
                }
            </CellTemplate>
        </TemplateColumn>

        <TemplateColumn Hidden="@(hide && element.hiddenColumns[$"{element.section}_{columnTitleTurnTime}"])" T="ShipBuildContainer" Title="@columnTitleTurnTime" HeaderClass="column-text-center" CellClass="column-text-center">
            <CellTemplate>
                @if (context.Item.ShipDataContainer?.MainBatteryDataContainer?.TurnTime is not null)
                {
                    <MudText Typo="Typo.body2">
                        @context.Item.ShipDataContainer.MainBatteryDataContainer.TurnTime
                    </MudText>
                }
                else
                {
                    <MudText Typo="Typo.body2" Color="Color.Primary">
                        @ShipComparisonViewModel.DataNotAvailable
                    </MudText>
                }
            </CellTemplate>
        </TemplateColumn>

        <TemplateColumn Hidden="hide" T="ShipBuildContainer" Title="Traverse speed (°/s)" HeaderClass="column-text-center" CellClass="column-text-center">
            <CellTemplate>
                @if (context.Item.ShipDataContainer?.MainBatteryDataContainer?.TraverseSpeed is not null)
                {
                    <MudText Typo="Typo.body2">
                        @context.Item.ShipDataContainer.MainBatteryDataContainer.TraverseSpeed
                    </MudText>
                }
                else
                {
                    <MudText Typo="Typo.body2" Color="Color.Primary">
                        @ShipComparisonViewModel.DataNotAvailable
                    </MudText>
                }
            </CellTemplate>
        </TemplateColumn>

        <TemplateColumn Hidden="hide" T="ShipBuildContainer" Title="Reload (s)" HeaderClass="column-text-center" CellClass="column-text-center">
            <CellTemplate>
                @if (context.Item.ShipDataContainer?.MainBatteryDataContainer?.Reload is not null)
                {
                    <MudText Typo="Typo.body2">
                        @context.Item.ShipDataContainer.MainBatteryDataContainer.Reload
                    </MudText>
                }
                else
                {
                    <MudText Typo="Typo.body2" Color="Color.Primary">
                        @ShipComparisonViewModel.DataNotAvailable
                    </MudText>
                }
            </CellTemplate>
        </TemplateColumn>

        <TemplateColumn Hidden="hide" T="ShipBuildContainer" Title="ROF (shots/min)" HeaderClass="column-text-center" CellClass="column-text-center">
            <CellTemplate>
                @if (context.Item.ShipDataContainer?.MainBatteryDataContainer?.RoF is not null)
                {
                    <MudText Typo="Typo.body2">
                        @context.Item.ShipDataContainer.MainBatteryDataContainer.RoF
                    </MudText>
                }
                else
                {
                    <MudText Typo="Typo.body2" Color="Color.Primary">
                        @ShipComparisonViewModel.DataNotAvailable
                    </MudText>
                }
            </CellTemplate>
        </TemplateColumn>

        <TemplateColumn Hidden="hide" T="ShipBuildContainer" Title="HE DPM" SortBy="@(x => int.Parse(x.ShipDataContainer?.MainBatteryDataContainer?.TheoreticalHeDpm ?? "0", NumberStyles.AllowThousands, nfi))" HeaderClass="column-text-center" CellClass="column-text-center">
            <CellTemplate>
                @if (!string.IsNullOrEmpty(context.Item.ShipDataContainer?.MainBatteryDataContainer?.TheoreticalHeDpm))
                {
                    <MudText Typo="Typo.body2">
                        @context.Item.ShipDataContainer.MainBatteryDataContainer.TheoreticalHeDpm
                    </MudText>
                }
                else
                {
                    <MudText Typo="Typo.body2" Color="Color.Primary">
                        @ShipComparisonViewModel.DataNotAvailable
                    </MudText>
                }
            </CellTemplate>
        </TemplateColumn>

        <TemplateColumn Hidden="hide" T="ShipBuildContainer" Title="AP DPM" SortBy="@(x => int.Parse(x.ShipDataContainer?.MainBatteryDataContainer?.TheoreticalApDpm ?? "0", NumberStyles.AllowThousands, nfi))" HeaderClass="column-text-center" CellClass="column-text-center">
            <CellTemplate>
                @if (!string.IsNullOrEmpty(context.Item.ShipDataContainer?.MainBatteryDataContainer?.TheoreticalApDpm))
                {
                    <MudText Typo="Typo.body2">
                        @context.Item.ShipDataContainer.MainBatteryDataContainer.TheoreticalApDpm
                    </MudText>
                }
                else
                {
                    <MudText Typo="Typo.body2" Color="Color.Primary">
                        @ShipComparisonViewModel.DataNotAvailable
                    </MudText>
                }
            </CellTemplate>
        </TemplateColumn>

        <TemplateColumn Hidden="hide" T="ShipBuildContainer" Title="SAP DPM" SortBy="@(x => int.Parse(x.ShipDataContainer?.MainBatteryDataContainer?.TheoreticalSapDpm ?? "0", NumberStyles.AllowThousands, nfi))" HeaderClass="column-text-center" CellClass="column-text-center">
            <CellTemplate>
                @if (!string.IsNullOrEmpty(context.Item.ShipDataContainer?.MainBatteryDataContainer?.TheoreticalSapDpm))
                {
                    <MudText Typo="Typo.body2">
                        @context.Item.ShipDataContainer.MainBatteryDataContainer.TheoreticalSapDpm
                    </MudText>
                }
                else
                {
                    <MudText Typo="Typo.body2" Color="Color.Primary">
                        @ShipComparisonViewModel.DataNotAvailable
                    </MudText>
                }
            </CellTemplate>
        </TemplateColumn>

        <TemplateColumn Hidden="hide" T="ShipBuildContainer" Title="HE Salvo" SortBy="@(x => int.Parse(x.ShipDataContainer?.MainBatteryDataContainer?.HeSalvo ?? "0", NumberStyles.AllowThousands, nfi))" HeaderClass="column-text-center" CellClass="column-text-center">
            <CellTemplate>
                @if (!string.IsNullOrEmpty(context.Item.ShipDataContainer?.MainBatteryDataContainer?.HeSalvo))
                {
                    <MudText Typo="Typo.body2">
                        @context.Item.ShipDataContainer.MainBatteryDataContainer.HeSalvo
                    </MudText>
                }
                else
                {
                    <MudText Typo="Typo.body2" Color="Color.Primary">
                        @ShipComparisonViewModel.DataNotAvailable
                    </MudText>
                }
            </CellTemplate>
        </TemplateColumn>

        <TemplateColumn Hidden="hide" T="ShipBuildContainer" Title="AP Salvo" SortBy="@(x => int.Parse(x.ShipDataContainer?.MainBatteryDataContainer?.ApSalvo ?? "0", NumberStyles.AllowThousands, nfi))" HeaderClass="column-text-center" CellClass="column-text-center">
            <CellTemplate>
                @if (!string.IsNullOrEmpty(context.Item.ShipDataContainer?.MainBatteryDataContainer?.ApSalvo))
                {
                    <MudText Typo="Typo.body2">
                        @context.Item.ShipDataContainer.MainBatteryDataContainer.ApSalvo
                    </MudText>
                }
                else
                {
                    <MudText Typo="Typo.body2" Color="Color.Primary">
                        @ShipComparisonViewModel.DataNotAvailable
                    </MudText>
                }
            </CellTemplate>
        </TemplateColumn>

        <TemplateColumn Hidden="hide" T="ShipBuildContainer" Title="SAP Salvo" SortBy="@(x => int.Parse(x.ShipDataContainer?.MainBatteryDataContainer?.SapSalvo ?? "0", NumberStyles.AllowThousands, nfi))" HeaderClass="column-text-center" CellClass="column-text-center">
            <CellTemplate>
                @if (!string.IsNullOrEmpty(context.Item.ShipDataContainer?.MainBatteryDataContainer?.SapSalvo))
                {
                    <MudText Typo="Typo.body2">
                        @context.Item.ShipDataContainer.MainBatteryDataContainer.ApSalvo
                    </MudText>
                }
                else
                {
                    <MudText Typo="Typo.body2" Color="Color.Primary">
                        @ShipComparisonViewModel.DataNotAvailable
                    </MudText>
                }
            </CellTemplate>
        </TemplateColumn>

        <TemplateColumn Hidden="hide" T="ShipBuildContainer" Field="MainBatteryFpm" Title="FPM (fires/min)" HeaderClass="column-text-center" CellClass="column-text-center">
            <CellTemplate>
                @if (context.Item.ShipDataContainer?.MainBatteryDataContainer?.PotentialFpm is not null && context.Item.ShipDataContainer.MainBatteryDataContainer.PotentialFpm != 0)
                {
                    <MudText Typo="Typo.body2">
                        @context.Item.ShipDataContainer.MainBatteryDataContainer.PotentialFpm
                    </MudText>
                }
                else
                {
                    <MudText Typo="Typo.body2" Color="Color.Primary">
                        @ShipComparisonViewModel.DataNotAvailable
                    </MudText>
                }
            </CellTemplate>
        </TemplateColumn>

        <TemplateColumn Hidden="hide" T="ShipBuildContainer" Field="MainBatterySigma" Title="Sigma" HeaderClass="column-text-center" CellClass="column-text-center">
            <CellTemplate>
                @if (context.Item.ShipDataContainer?.MainBatteryDataContainer?.Sigma is not null)
                {
                    <MudText Typo="Typo.body2">
                        @context.Item.ShipDataContainer.MainBatteryDataContainer.Sigma
                    </MudText>
                }
                else
                {
                    <MudText Typo="Typo.body2" Color="Color.Primary">
                        @ShipComparisonViewModel.DataNotAvailable
                    </MudText>
                }
            </CellTemplate>
        </TemplateColumn>
    };
}