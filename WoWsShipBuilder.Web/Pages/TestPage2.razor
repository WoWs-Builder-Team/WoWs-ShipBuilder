@page "/test2"
@using WoWsShipBuilder.Web.Dialogs
@using WoWsShipBuilder.Web.Data
@using WoWsShipBuilder.Core.DataProvider
@using WoWsShipBuilder.Core.Services
@using WoWsShipBuilder.DataStructures

@inject IDialogService DialogService
@inject IAppDataService AppDataService

<MudRadioGroup @bind-SelectedOption="selectedTier">
    @for (var i = 1; i <= 11; i++)
    {
        int tier = i;
        <MudRadio Option="@tier">Tier @tier</MudRadio>
    }
</MudRadioGroup>

<MudButton OnClick="@Callback">Show build configuration dialog</MudButton>

@code {

    private List<ShipBuildContainer> ships = new();

    private int selectedTier = 10;

    private int lastTier = 10;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await UpdateShipList();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
        if (lastTier != selectedTier)
        {
            lastTier = selectedTier;
            await UpdateShipList();
        }
    }

    private async Task UpdateShipList()
    {
        var shipList = await Task.WhenAll(AppData.ShipSummaryList!
            .Where(s => s.Tier == selectedTier && s.ShipClass == ShipClass.Cruiser)
            .Take(25)
            .Select(summary => AppDataService.GetShipFromSummary(summary, false)));
        ships = shipList.Select(s => ShipBuildContainer.CreateNew(s!, null, new List<int> { 1 })).ToList();
    }

    private async Task Callback()
    {
        var options = new DialogOptions { MaxWidth = MaxWidth.Large, FullWidth = true, NoHeader = true };
        var parameters = new DialogParameters
        {
            ["ImagesBaseAddress"] = "https://cdn.wowssb.com/images/individual/",
            ["Ships"] = ships,
        };
        var reference = DialogService.Show<BuildConfigurationDialog>("Configure builds", parameters, options);
        var result = await reference.Result;
        if (result.Data is List<ShipBuildContainer> buildList)
        {
            ships = buildList;
        }
    }

}