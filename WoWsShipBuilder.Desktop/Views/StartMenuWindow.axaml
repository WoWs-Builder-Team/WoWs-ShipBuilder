<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d" d:DesignWidth="400" d:DesignHeight="800"
        x:Class="WoWsShipBuilder.Desktop.Views.StartMenuWindow"
        xmlns:translations="clr-namespace:WoWsShipBuilder.Infrastructure.Localization.Resources;assembly=WoWsShipBuilder.Common"
        xmlns:progRing="clr-namespace:AvaloniaProgressRing;assembly=AvaloniaProgressRing"
        xmlns:utilities="clr-namespace:WoWsShipBuilder.Desktop.Utilities"
        xmlns:desktop="clr-namespace:WoWsShipBuilder.Desktop"
        xmlns:converters="clr-namespace:WoWsShipBuilder.Desktop.Converters"
        xmlns:services="clr-namespace:WoWsShipBuilder.Desktop.Services"
        xmlns:userControls="clr-namespace:WoWsShipBuilder.Desktop.UserControls"
        Title="WoWs Ship Builder"
        Name="StartWindow"
        Height="800" Width="400" CanResize="False"
        utilities:Scaling.ContentScaling="1"
        Design.DataContext="{x:Static desktop:DesignDataHelper.StartMenuViewModel}"
        WindowStartupLocation="CenterScreen">

    <Window.Resources>
        <converters:BuildNameConverter x:Key="BuildNameConverter" />
        <converters:UpdateStatusBooleanConverter x:Key="UpdateStatusConverter" />
    </Window.Resources>

    <Window.Styles>
        <Style Selector="Button">
            <Setter Property="Width" Value="250" />
            <Setter Property="Height" Value="50" />
        </Style>
        <Style Selector="ListBox">
            <Setter Property="Width" Value="250" />
            <Setter Property="Height" Value="100" />
        </Style>
    </Window.Styles>

    <LayoutTransformControl>
        <LayoutTransformControl.LayoutTransform>
            <!-- Will trigger a binding notification for a null value, no way to suppress that. -->
            <ScaleTransform ScaleX="{Binding $parent[Window].(utilities:Scaling.ContentScaling), TargetNullValue=1, FallbackValue=1}"
                            ScaleY="{Binding $parent[Window].(utilities:Scaling.ContentScaling), TargetNullValue=1, FallbackValue=1}" />
        </LayoutTransformControl.LayoutTransform>
        <Panel>
            <progRing:ProgressRing
                IsVisible="{Binding NotificationService.AppUpdateStatus, Converter={StaticResource UpdateStatusConverter}, ConverterParameter={x:Static services:UpdateStatus.Active}}"
                Width="40" Height="40"
                IsActive="True"
                HorizontalAlignment="Left" VerticalAlignment="Top"
                Foreground="Yellow"
                IsHitTestVisible="True"
                Margin="5"
                ToolTip.Tip="{x:Static translations:Translation.NotificationService_UpdateActive}" ToolTip.Placement="Right" />
            <Image ZIndex="10"
                   IsVisible="{Binding NotificationService.AppUpdateStatus, Converter={StaticResource UpdateStatusConverter}, ConverterParameter={x:Static services:UpdateStatus.Error}}"
                   Source="/Assets/Icons/Error.png"
                   Width="40" Height="40"
                   HorizontalAlignment="Left" VerticalAlignment="Top"
                   Margin="5"
                   ToolTip.Tip="{Binding NotificationService.AppUpdateMessage, Converter={StaticResource Localizer}, ConverterParameter=RESX}"
                   ToolTip.Placement="Right" />
            <Image ZIndex="10"
                   IsVisible="{Binding NotificationService.AppUpdateStatus, Converter={StaticResource UpdateStatusConverter}, ConverterParameter={x:Static services:UpdateStatus.Completed}}"
                   Source="/Assets/Icons/Info.png"
                   Width="40" Height="40"
                   HorizontalAlignment="Left" VerticalAlignment="Top"
                   Margin="5"
                   PointerPressed="OnUpdateCompletedIconClicked"
                   ToolTip.Tip="{x:Static translations:Translation.NotificationService_UpdateCompleted}"
                   ToolTip.Placement="Right" />
            <Grid RowDefinitions="30,1.35*,Auto,*,Auto, Auto" ZIndex="9">
                <userControls:AppHeader Grid.Row="0" ShowTitle="False" />
                <Image Source="/Assets/Art/logo_white_text.png" Grid.Row="0" Grid.RowSpan="2" Margin="0 10 0 0" Name="Image" />
                <Button Command="{Binding NewBuild}" Content="{x:Static translations:Translation.StartMenu_NewBuild}" Grid.Row="2"
                        Margin="10" />
                <StackPanel Orientation="Vertical" Grid.Row="3" Width="250" Spacing="10" Margin="0,10,0,10">
                    <Button Command="{Binding LoadBuild}" Content="{Binding LoadBuildButtonText}" />
                    <Button Command="{Binding DeleteBuildCommand}" Content="{x:Static translations:Translation.StartMenu_DeleteBuild}" />
                    <ListBox Items="{Binding BuildList}" HorizontalAlignment="Stretch" SelectedIndex="{Binding SelectedBuild}"
                             SelectionMode="Single" VirtualizationMode="None"
                             ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <!--Helper stack panel to catch the double tap event. Background set to transparent so we can get hit tested.-->
                                <StackPanel Background="Transparent" DoubleTapped="LoadBuild">
                                    <TextBlock Text="{Binding Converter={StaticResource BuildNameConverter}}" TextWrapping="NoWrap"
                                               TextTrimming="CharacterEllipsis" ToolTip.Tip="{Binding Converter={StaticResource BuildNameConverter}}"
                                               ToolTip.ShowDelay="800" />
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </StackPanel>
                <Button Grid.Row="4" Command="{Binding OpenDispersionGraphWindow}" Margin="0,10,0,10">
                    <TextBlock Text="{x:Static translations:Translation.StartMenu_OpenDispersionWindow}" TextWrapping="Wrap" TextAlignment="Center" />
                </Button>
                <Button Command="{Binding Setting}" Content="{x:Static translations:Translation.StartMenu_Settings}" Grid.Row="5"
                        Margin="0,10,0,20" />
            </Grid>
        </Panel>

    </LayoutTransformControl>
</Window>