name: Build and create release

on: 
  push:
    branches:
      - main

jobs: 
  build-and-release:
    runs-on: windows-latest
    name: Build and release application

    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x
      - name: Create application config
        run: 'echo "$APPCONFIG" > WoWsShipBuilder.UI/Settings/ApplicationOptions.json'
        shell: bash
        env:
          APPCONFIG: ${{secrets.SHIPBUILDER_APPCONFIG}}
      - name: Restore dependencies
        run: dotnet restore
      - name: Build application
        run: dotnet build --no-restore -c Release
        
      - name: Store current application version
        uses: actions/upload-artifact@v2
        with: 
          name: buildInfo
          path: WoWsShipBuilder.UI\buildInfo.txt
      - name: Store current application version as environment variable
        run: echo ("CURRENT_TAG=v" + (Get-Content -Path .\WoWsShipBuilder.UI\buildInfo.txt -First 1)) >> $env:GITHUB_ENV
        
      - name: Test application
        run: dotnet test --no-build -c Release --verbosity normal
      - name: Squirrel build and release
        run: Tools\SquirrelBuildAndRelease.ps1
        shell: powershell
        
      - name: Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: releases/*
          bodyFile: ReleaseNotes.md
          tag: ${{ env.CURRENT_TAG }}
          commit: main
          token: ${{ secrets.GITHUB_TOKEN }}
  
  sentry-notify:
    runs-on: ubuntu-latest
    name: Create release on sentry
    needs: build-and-release

    steps:
      - uses: actions/checkout@v2
      - name: Download version info
        uses: actions/download-artifact@v2
        with:
          name: buildInfo
          path: buildInfo
      - name: Process release version
        run: echo "RELEASE_VERSION=$(head -n 1 buildInfo/buildInfo.txt)" >> $GITHUB_ENV
      - name: Create Sentry release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_RELEASE_AUTH }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        with:
          environment: production
          version: ${{ env.RELEASE_VERSION }}