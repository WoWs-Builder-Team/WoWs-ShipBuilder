@page "/"
@using System.Collections.ObjectModel
@using System.Collections.Specialized
@using WoWsShipBuilder.Infrastructure.DataTransfer
@using WoWsShipBuilder.Infrastructure.Localization.Resources
@using WoWsShipBuilder.Infrastructure.Utility
@inject RefreshNotifierService NotifierService
@inject ILocalizer Localizer
@inject AppPagesBrowser AppPagesBrowser
@implements IDisposable

<PageTitle>
    WoWs ShipBuilder
</PageTitle>

<MudHidden Breakpoint="Breakpoint.MdAndDown">
    <FittingToolSelector SelectedShips="@selectedShips"/>
</MudHidden>
<MudContainer>
    <MudGrid Justify="Justify.Center">
        <MudItem xs="12" Class="py-2"/>
        <MudItem xs="12">
            <ShipSelector SelectedShips="@selectedShips" AllowCopies EnableBuildImport EnableSavedBuildList/>
        </MudItem>
        <MudItem xs="12" Class="mt-n2">
            <MudButton Disabled="@(selectedShips.Count == 0)" Variant="Variant.Filled" Color="Color.Primary" DisableElevation="true" OnClick="@(_ => AppPagesBrowser.GoToShipStats(selectedShips))" FullWidth="true">
                @Localizer.GetAppLocalization(nameof(Translation.WebApp_ViewShipsStats)).Localization
            </MudButton>
        </MudItem>
    </MudGrid>
</MudContainer>

@code
{
    private readonly ObservableCollection<ShipBuildContainer> selectedShips = new();

    protected override void OnInitialized()
    {
        base.OnInitialized();
        selectedShips.CollectionChanged += SelectedShipsOnCollectionChanged;
        NotifierService.RefreshRequested += OnRefresh;
    }

    private void SelectedShipsOnCollectionChanged(object? sender, NotifyCollectionChangedEventArgs e)
    {
        StateHasChanged();
    }

    private void OnRefresh()
    {
        StateHasChanged();
    }

    public void Dispose()
    {
        selectedShips.CollectionChanged -= SelectedShipsOnCollectionChanged;
        NotifierService.RefreshRequested -= OnRefresh;
    }
}
