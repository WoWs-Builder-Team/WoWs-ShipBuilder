@using WoWsShipBuilder.DataContainers
@using WoWsShipBuilder.Infrastructure.Localization.Resources
@using WoWsShipBuilder.Infrastructure.Utility
@inherits ReactiveComponentBase<WoWsShipBuilder.Features.ShipStats.ViewModels.SignalSelectorViewModel>
@inject ILocalizer Localizer

@if (ViewModel is not null)
{
    <MudPaper Outlined="true" Class="pa-3" Style="display: flex">
        <MudGrid Justify="Justify.Center">
            <MudItem xs="12">
                <MudText Typo="Typo.body2" Align="Align.Center">@(Localizer.GetAppLocalization(nameof(Translation.MainWindow_Signals)).Localization + ": " + ViewModel.SignalsNumber + "/8")</MudText>
            </MudItem>
            @foreach (var (_, signal) in ViewModel.SignalList.Where(x => !string.IsNullOrEmpty(x.Key)))
            {
                <MudItem @key="signal.Signal.Index" xs="2" Class="d-flex justify-center" Style="@GetOrder(signal.Signal.SortOrder)">
                    <MudTooltip Placement="Placement.Right" Color="Color.Transparent" Delay="350">
                        <ChildContent>
                            <MudPaper Outlined Elevation="0" Style="@(GetImageBreakpointStyle() + GetMudPaperStyle(ViewModel!.SelectedSignals.Any(x => x.Name.Equals(signal.Signal.Name))))">
                                <MudImage ObjectFit="ObjectFit.ScaleDown" Width="@GetImageSize()" Height="@GetImageSize()" Src="@("/_content/WoWsShipBuilder.Common/assets/signal_flags/" + signal.Signal.Name + ".png")" Style="@GetImageBreakpointStyle()" Class="pa-1"/>
                            </MudPaper>
                        </ChildContent>
                        <TooltipContent>
                            <MudPaper Outlined="true" Style="max-width: 300px">
                                <MudStack Spacing="0" Class="pa-2">
                                    <MudText Align="Align.Center" Typo="Typo.h6">
                                        @Localizer.GetGameLocalization(signal.Signal.Name).Localization
                                    </MudText>
                                    <MudDivider Light="true" Class="ma-1"/>
                                    @foreach ((string? modifierName, double modifierValue) in signal.Signal.Modifiers)
                                    {
                                        // this is here so we can have the call to the ModifierProcessor only once, to share the value between the if and the mudtext
                                        string modifierString = ModifierProcessor.GetUiModifierString(modifierName, modifierValue, ReturnFilter.All, Localizer);
                                        if (!string.IsNullOrWhiteSpace(modifierString))
                                        {
                                            <MudText Align="Align.Left" Typo="Typo.body2" Style="white-space: break-spaces">
                                                @modifierString
                                            </MudText>
                                        }
                                    }
                                </MudStack>
                            </MudPaper>
                        </TooltipContent>
                    </MudTooltip>
                </MudItem>
            }
        </MudGrid>
    </MudPaper>
}


@code {

    [CascadingParameter]
    private Breakpoint Breakpoint { get; set; }

    private string GetOrder(int signalSortOrder)
    {
        return $"order: {signalSortOrder};";
    }

    private int GetImageSize()
    {
        switch (Breakpoint)
        {
            case Breakpoint.Xs:
            case Breakpoint.Sm:
                return 25;
            default:
                return 40;
        }
    }

    private string GetImageBreakpointStyle()
    {
        switch (Breakpoint)
        {
            case Breakpoint.Xs:
            case Breakpoint.Sm:
                return "min-width: 40px; width: 40px; height: 40px;";
            default:
                return "min-width: 55px; width: 55px; height: 55px;";
        }
    }

    private string GetMudPaperStyle(bool isSelected)
    {
        return " border-color: " + (isSelected ? "#BC0606;" : "#3C3C3C; opacity: 0.4;");
    }
}