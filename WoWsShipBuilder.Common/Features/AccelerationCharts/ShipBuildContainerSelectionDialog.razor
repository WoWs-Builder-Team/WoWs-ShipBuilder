@using System.Collections.Specialized
@using System.Collections.ObjectModel
@using DynamicData
@using WoWsShipBuilder.Features.Navigation
@using WoWsShipBuilder.Infrastructure.Localization.Resources

@implements IDisposable
@inject ILocalizer Localizer

<MudDialog ContentStyle="max-height: calc(90vh - 100px); overflow-y: scroll; padding: 12px;" Class="default-background">
    <DialogContent>
        <ShipSelector SelectedShips="@selectedShips" MultiSelect AllowCopies EnableBuildImport EnableSavedBuildList DisableSelectedShipBuildEditing/>
    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Text" Color="Color.Default" DisableElevation="true" OnClick="@Cancel">
            @Localizer.GetAppLocalization(nameof(Translation.Cancel)).Localization
        </MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Tertiary" DisableElevation="true" Disabled="@(ShipList != null && ShipList!.Count == 0)" OnClick="@(() => SubmitShips(true))">
            @if (processing)
            {
                <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true"/>
                <MudText Class="ms-2" Typo="Typo.button">
                    @Localizer.GetAppLocalization(nameof(Translation.ShipAndShellSelectionDialogWeb_Loading)).Localization
                </MudText>
            }
            else
            {
                <MudText Typo="Typo.button">
                    @Localizer.GetAppLocalization(nameof(Translation.ShipSelectionWindow_EditBuilds)).Localization
                </MudText>
            }
        </MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" DisableElevation="true" OnClick="@(() => SubmitShips(false))">
            @if (processing)
            {
                <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true"/>
                <MudText Class="ms-2" Typo="Typo.button">
                    @Localizer.GetAppLocalization(nameof(Translation.ShipAndShellSelectionDialogWeb_Loading)).Localization
                </MudText>
            }
            else
            {
                <MudText Typo="Typo.button">
                    @Localizer.GetAppLocalization(nameof(Translation.ShipSelectionWindow_ConfirmButton)).Localization
                </MudText>
            }
        </MudButton>
    </DialogActions>
</MudDialog>

@code {

    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; } = null!;

    [Parameter]
    public List<ShipBuildContainer>? ShipList { get; set; }

    private readonly ObservableCollection<ShipBuildContainer> selectedShips = new();

    bool processing;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        ShipList ??= new();
        selectedShips.AddRange(ShipList);
        selectedShips.CollectionChanged += SelectedShipsOnCollectionChanged;
    }

    private void Cancel()
    {
        MudDialog.Cancel();
    }

    private void SubmitShips(bool shouldOpenBuildDialog)
    {
        processing = true;
        StateHasChanged();
        MudDialog.Close(new ShipBuildContainerSelectionDialogOutput(ShipList!, shouldOpenBuildDialog));
    }

    private void SelectedShipsOnCollectionChanged(object? sender, NotifyCollectionChangedEventArgs e)
    {
        if (e.NewItems?[0] is ShipBuildContainer newContainer)
        {
            ShipList!.Add(newContainer);
        }

        if (e.OldItems?[0] is ShipBuildContainer oldContainer)
        {
            ShipList!.Remove(oldContainer);
        }

        StateHasChanged();
    }

    public void Dispose()
    {
        selectedShips.CollectionChanged -= SelectedShipsOnCollectionChanged;
    }

}
