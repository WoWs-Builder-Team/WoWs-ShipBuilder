@using System.ComponentModel.DataAnnotations

<MudStack Row Spacing="0" AlignItems="AlignItems.Center">
    <div style="width: 100%">
        <MudSpacer/>
    </div>
    <MudNumericField Value="PageSize" DebounceInterval="350" Variant="Variant.Text" Immediate Required Min="@MinPageSize" Max="@MaxPageSize" Label="Ships" ValueChanged="@(pageSize => RecalculateTotalPages(pageSize))" T="int"/>
    <MudText Style="white-space: nowrap">
        @($"{1 + (PageSize * Page)}-{(TotalShips == 0 ? 0 : PageSize * (Page + 1))} of {TotalShips}")
    </MudText>
    <MudIconButton Variant="Variant.Text" Style="padding: 0 0 0 0; width: 48px; height: 48px;" Icon="@Icons.Material.Filled.KeyboardDoubleArrowLeft" OnClick="@GoToFirstPage"/>
    <MudIconButton Variant="Variant.Text" Style="padding: 0 0 0 0; margin: 0 0 0 0; width: 48px; height: 48px;" OnClick="@GoToNextPage">
        @(Page - 1 <= 0 ? "-" : Page - 1)
    </MudIconButton>
    <MudText>
        @($"{Page + 1}")
    </MudText>
    <MudIconButton Variant="Variant.Text" Style="padding: 0 0 0 0; margin: 0 0 0 0; width: 48px; height: 48px;" OnClick="@GoToPreviousPage">
        @(Page + 1 >= totalPages ? "-" : Page + 1)
    </MudIconButton>
    <MudIconButton Variant="Variant.Text" Style="padding: 0 0 0 0; width: 48px; height: 48px;" Icon="@Icons.Material.Filled.KeyboardDoubleArrowRight" OnClick="@GoToLastPage"/>
</MudStack>


@code {

    private const int MinPageSize = 1;
    private const int MaxPageSize = 300;

    private int totalPages;

    [Parameter, Required]
    public int TotalShips { get; set; }

    [Parameter, Required]
    public int PageSize { get; set; }

    [Parameter, Required]
    public int Page { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        totalPages = (TotalShips / PageSize) + (TotalShips % PageSize) == 0 ? 0 : 1;
    }

    private void GoToNextPage()
    {
        if (Page + 1 <= totalPages)
        {
            Page++;
        }
    }

    private void GoToPreviousPage()
    {
        if (Page - 1 >= 0)
        {
            Page--;
        }
    }

    private void GoToLastPage()
    {
        Page = totalPages - 1;
    }

    private void GoToFirstPage()
    {
        Page = 0;
    }

    private void RecalculateTotalPages(int pageSize)
    {
        PageSize = pageSize;
        totalPages = (TotalShips / PageSize) + (TotalShips % PageSize) == 0 ? 0 : 1;
    }
}
