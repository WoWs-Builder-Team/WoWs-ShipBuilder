@using WoWsShipBuilder.Infrastructure.Localization.Resources
@using WoWsShipBuilder.Features.ShipComparison.GridData
@code {

    // Parameter needs to be named __builder, otherwise compilation will fail.
    // ReSharper disable once InconsistentNaming UnusedParameter.Local
    public static readonly RenderFragment<(Func<string, string, bool> IsColumnHidden, ILocalizer localizer)> AaDefenseDataFragment = element => __builder =>
    {
        string dataSectionString = ShipComparisonDataSections.AntiAir.AsString();

        var unitKm = $" {element.localizer.SimpleAppLocalization(nameof(Translation.Unit_KM))}";
        var unitPerCent = $" {element.localizer.SimpleAppLocalization(nameof(Translation.Unit_PerCent))}";

        var columnTitleLongAura = element.localizer.SimpleAppLocalization(nameof(Translation.ShipStats_LongAura));
        var columnTitleLongAuraDps = $"{element.localizer.SimpleAppLocalization(nameof(Translation.ShipStats_LongAura))} {element.localizer.SimpleAppLocalization(nameof(Translation.Unit_DPS))}";
        var columnTitleLongAuraHitChance = $"{element.localizer.SimpleAppLocalization(nameof(Translation.ShipStats_LongAura))} {element.localizer.SimpleAppLocalization(nameof(Translation.ShipStats_HitChance))}";
        var columnTitleFlaks = $"{element.localizer.SimpleAppLocalization(nameof(Translation.ShipStats_Flak))}";
        var columnTitleFlaksDamage = $"{element.localizer.SimpleAppLocalization(nameof(Translation.ShipStats_FlakDamage))}";
        var columnTitleMediumAura = element.localizer.SimpleAppLocalization(nameof(Translation.ShipStats_MediumAura));
        var columnTitleMediumAuraDps = $"{element.localizer.SimpleAppLocalization(nameof(Translation.ShipStats_MediumAura))} {element.localizer.SimpleAppLocalization(nameof(Translation.Unit_DPS))}";
        var columnTitleMediumAuraHitChance = $"{element.localizer.SimpleAppLocalization(nameof(Translation.ShipStats_MediumAura))} {element.localizer.SimpleAppLocalization(nameof(Translation.ShipStats_HitChance))}";
        var columnTitleShortAura = element.localizer.SimpleAppLocalization(nameof(Translation.ShipStats_ShortAura));
        var columnTitleShortAuraDps = $"{element.localizer.SimpleAppLocalization(nameof(Translation.ShipStats_ShortAura))} {element.localizer.SimpleAppLocalization(nameof(Translation.Unit_DPS))}";
        var columnTitleShortAuraHitChance = $"{element.localizer.SimpleAppLocalization(nameof(Translation.ShipStats_ShortAura))} {element.localizer.SimpleAppLocalization(nameof(Translation.ShipStats_HitChance))}";

        <TemplateColumn ID="@($"{dataSectionString}_{columnTitleLongAura}")" Hidden="@element.IsColumnHidden.Invoke(dataSectionString, columnTitleLongAura)" SortBy="@(x => x.AntiAirArmament?.LongRangeAura?.Range ?? 0)" T="GridDataWrapper" Title="@columnTitleLongAura" HeaderClass="column-text-center" CellClass="column-text-center">
            <CellTemplate>
                @if (context.Item.AntiAirArmament?.LongRangeAura?.Range is not null)
                {
                    <MudText Typo="Typo.body2">
                        @(context.Item.AntiAirArmament?.LongRangeAura?.Range + unitKm)
                    </MudText>
                }
                else
                {
                    @UtilityFragments.DataNotAvailableFragment
                }
            </CellTemplate>
        </TemplateColumn>

        <TemplateColumn ID="@($"{dataSectionString}_{columnTitleLongAuraDps}")" Hidden="@element.IsColumnHidden.Invoke(dataSectionString, columnTitleLongAuraDps)" SortBy="@(x => x.AntiAirArmament?.LongRangeAura?.ConstantDamage ?? 0)" T="GridDataWrapper" Title="@columnTitleLongAuraDps" HeaderClass="column-text-center" CellClass="column-text-center">
            <CellTemplate>
                @if (context.Item.AntiAirArmament?.LongRangeAura?.ConstantDamage is not null)
                {
                    <MudText Typo="Typo.body2">
                        @context.Item.AntiAirArmament?.LongRangeAura?.ConstantDamage
                    </MudText>
                }
                else
                {
                    @UtilityFragments.DataNotAvailableFragment
                }
            </CellTemplate>
        </TemplateColumn>

        <TemplateColumn ID="@($"{dataSectionString}_{columnTitleLongAuraHitChance}")" Hidden="@element.IsColumnHidden.Invoke(dataSectionString, columnTitleLongAuraHitChance)" SortBy="@(x => x.AntiAirArmament?.LongRangeAura?.HitChance ?? 0)" T="GridDataWrapper" Title="@columnTitleLongAuraHitChance" HeaderClass="column-text-center" CellClass="column-text-center">
            <CellTemplate>
                @if (context.Item.AntiAirArmament?.LongRangeAura?.HitChance is not null)
                {
                    <MudText Typo="Typo.body2">
                        @(context.Item.AntiAirArmament?.LongRangeAura?.HitChance + unitPerCent)
                    </MudText>
                }
                else
                {
                    @UtilityFragments.DataNotAvailableFragment
                }
            </CellTemplate>
        </TemplateColumn>

        <TemplateColumn ID="@($"{dataSectionString}_{columnTitleFlaks}")" Hidden="@element.IsColumnHidden.Invoke(dataSectionString, columnTitleFlaks)" T="GridDataWrapper" Title="@columnTitleFlaks" HeaderClass="column-text-center" CellClass="column-text-center" SortBy="@(x => int.Parse(x.AntiAirArmament?.LongRangeAura?.Flak.Split(" ± ").First() ?? "0"))">
            <CellTemplate>
                @if (!string.IsNullOrEmpty(context.Item.AntiAirArmament?.LongRangeAura?.Flak))
                {
                    <MudText Typo="Typo.body2">
                        @context.Item.AntiAirArmament?.LongRangeAura?.Flak
                    </MudText>
                }
                else
                {
                    @UtilityFragments.DataNotAvailableFragment
                }
            </CellTemplate>
        </TemplateColumn>

        <TemplateColumn ID="@($"{dataSectionString}_{columnTitleFlaksDamage}")" Hidden="@element.IsColumnHidden.Invoke(dataSectionString, columnTitleFlaksDamage)" SortBy="@(x => x.AntiAirArmament?.LongRangeAura?.FlakDamage ?? 0)" T="GridDataWrapper" Title="@columnTitleFlaksDamage" HeaderClass="column-text-center" CellClass="column-text-center">
            <CellTemplate>
                @if (context.Item.AntiAirArmament?.LongRangeAura?.FlakDamage is not null)
                {
                    <MudText Typo="Typo.body2">
                        @context.Item.AntiAirArmament?.LongRangeAura?.FlakDamage
                    </MudText>
                }
                else
                {
                    @UtilityFragments.DataNotAvailableFragment
                }
            </CellTemplate>
        </TemplateColumn>

        <TemplateColumn ID="@($"{dataSectionString}_{columnTitleMediumAura}")" Hidden="@element.IsColumnHidden.Invoke(dataSectionString, columnTitleMediumAura)" SortBy="@(x => x.AntiAirArmament?.MediumRangeAura?.Range ?? 0)" T="GridDataWrapper" Title="@columnTitleMediumAura" HeaderClass="column-text-center" CellClass="column-text-center">
            <CellTemplate>
                @if (context.Item.AntiAirArmament?.MediumRangeAura?.Range is not null)
                {
                    <MudText Typo="Typo.body2">
                        @(context.Item.AntiAirArmament?.MediumRangeAura?.Range + unitKm)
                    </MudText>
                }
                else
                {
                    @UtilityFragments.DataNotAvailableFragment
                }
            </CellTemplate>
        </TemplateColumn>

        <TemplateColumn ID="@($"{dataSectionString}_{columnTitleMediumAuraDps}")" Hidden="@element.IsColumnHidden.Invoke(dataSectionString, columnTitleMediumAuraDps)" SortBy="@(x => x.AntiAirArmament?.MediumRangeAura?.ConstantDamage ?? 0)" T="GridDataWrapper" Title="@columnTitleMediumAuraDps" HeaderClass="column-text-center" CellClass="column-text-center">
            <CellTemplate>
                @if (context.Item.AntiAirArmament?.MediumRangeAura?.ConstantDamage is not null)
                {
                    <MudText Typo="Typo.body2">
                        @context.Item.AntiAirArmament?.MediumRangeAura?.ConstantDamage
                    </MudText>
                }
                else
                {
                    @UtilityFragments.DataNotAvailableFragment
                }
            </CellTemplate>
        </TemplateColumn>

        <TemplateColumn ID="@($"{dataSectionString}_{columnTitleMediumAuraHitChance}")" Hidden="@element.IsColumnHidden.Invoke(dataSectionString, columnTitleMediumAuraHitChance)" SortBy="@(x => x.AntiAirArmament?.MediumRangeAura?.HitChance ?? 0)" T="GridDataWrapper" Title="@columnTitleMediumAuraHitChance" HeaderClass="column-text-center" CellClass="column-text-center">
            <CellTemplate>
                @if (context.Item.AntiAirArmament?.MediumRangeAura?.HitChance is not null)
                {
                    <MudText Typo="Typo.body2">
                        @(context.Item.AntiAirArmament?.MediumRangeAura?.HitChance + unitPerCent)
                    </MudText>
                }
                else
                {
                    @UtilityFragments.DataNotAvailableFragment
                }
            </CellTemplate>
        </TemplateColumn>

        <TemplateColumn ID="@($"{dataSectionString}_{columnTitleShortAura}")" Hidden="@element.IsColumnHidden.Invoke(dataSectionString, columnTitleShortAura)" SortBy="@(x => x.AntiAirArmament?.ShortRangeAura?.Range ?? 0)" T="GridDataWrapper" Title="@columnTitleShortAura" HeaderClass="column-text-center" CellClass="column-text-center">
            <CellTemplate>
                @if (context.Item.AntiAirArmament?.ShortRangeAura?.Range is not null)
                {
                    <MudText Typo="Typo.body2">
                        @(context.Item.AntiAirArmament?.ShortRangeAura?.Range + unitKm)
                    </MudText>
                }
                else
                {
                    @UtilityFragments.DataNotAvailableFragment
                }
            </CellTemplate>
        </TemplateColumn>

        <TemplateColumn ID="@($"{dataSectionString}_{columnTitleShortAuraDps}")" Hidden="@element.IsColumnHidden.Invoke(dataSectionString, columnTitleShortAuraDps)" SortBy="@(x => x.AntiAirArmament?.ShortRangeAura?.ConstantDamage ?? 0)" T="GridDataWrapper" Title="@columnTitleShortAuraDps" HeaderClass="column-text-center" CellClass="column-text-center">
            <CellTemplate>
                @if (context.Item.AntiAirArmament?.ShortRangeAura?.ConstantDamage is not null)
                {
                    <MudText Typo="Typo.body2">
                        @context.Item.AntiAirArmament?.ShortRangeAura?.ConstantDamage
                    </MudText>
                }
                else
                {
                    @UtilityFragments.DataNotAvailableFragment
                }
            </CellTemplate>
        </TemplateColumn>

        <TemplateColumn ID="@($"{dataSectionString}_{columnTitleShortAuraHitChance}")" Hidden="@element.IsColumnHidden.Invoke(dataSectionString, columnTitleShortAuraHitChance)" SortBy="@(x => x.AntiAirArmament?.ShortRangeAura?.HitChance ?? 0)" T="GridDataWrapper" Title="@columnTitleShortAuraHitChance" HeaderClass="column-text-center" CellClass="column-text-center">
            <CellTemplate>
                @if (context.Item.AntiAirArmament?.ShortRangeAura?.HitChance is not null)
                {
                    <MudText Typo="Typo.body2">
                        @(context.Item.AntiAirArmament?.ShortRangeAura?.HitChance + unitPerCent)
                    </MudText>
                }
                else
                {
                    @UtilityFragments.DataNotAvailableFragment
                }
            </CellTemplate>
        </TemplateColumn>
    };
}
