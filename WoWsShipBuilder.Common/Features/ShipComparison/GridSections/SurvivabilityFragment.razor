@using WoWsShipBuilder.Infrastructure.Localization.Resources
@using WoWsShipBuilder.Features.ShipComparison.GridData
@code {

    // Parameter needs to be named __builder, otherwise compilation will fail.
    // ReSharper disable once InconsistentNaming UnusedParameter.Local
    public static readonly RenderFragment<(Func<string, string, bool> IsColumnHidden, ILocalizer localizer)> SurvivabilityDataFragment = element => __builder =>
    {
        string dataSectionString = ShipComparisonDataSections.Survivability.AsString();

        var unitU = $" {element.localizer.SimpleAppLocalization(nameof(Translation.Unit_U))}";
        var unitUps = $" {element.localizer.SimpleAppLocalization(nameof(Translation.Unit_UPS))}";
        var unitPerCent = $" {element.localizer.SimpleAppLocalization(nameof(Translation.Unit_PerCent))}";
        var unitS = $" {element.localizer.SimpleAppLocalization(nameof(Translation.Unit_S))}";

        var columnTitleHp = element.localizer.SimpleAppLocalization(nameof(Translation.Unit_HP));
        var columnDiveCapacity = $"{element.localizer.SimpleAppLocalization(nameof(Translation.ShipStats_Battery))} {element.localizer.SimpleAppLocalization(nameof(Translation.ShipStats_DiveCapacity))}";
        var columnDiveCapacityRechargeRate = $"{element.localizer.SimpleAppLocalization(nameof(Translation.ShipStats_Battery))} {element.localizer.SimpleAppLocalization(nameof(Translation.ShipStats_DiveCapacityRechargeRate))}";
        var columnTitleFireMaxAmount = $"{element.localizer.SimpleAppLocalization(nameof(Translation.ShipStats_Fire))} {element.localizer.SimpleAppLocalization(nameof(Translation.ShipStats_Max))} {element.localizer.SimpleAppLocalization(nameof(Translation.ShipComparison_Amount))}";
        var columnTitleFireMaxDuration = $"{element.localizer.SimpleAppLocalization(nameof(Translation.ShipStats_Fire))} {element.localizer.SimpleAppLocalization(nameof(Translation.ShipStats_Max))} {element.localizer.SimpleAppLocalization(nameof(Translation.ShipStats_Duration))}";
        var columnTitleFireDps = $"{element.localizer.SimpleAppLocalization(nameof(Translation.ShipStats_Fire))} {element.localizer.SimpleAppLocalization(nameof(Translation.Unit_DPS))}";
        var columnTitleFireMaxDmg = $"{element.localizer.SimpleAppLocalization(nameof(Translation.ShipStats_Fire))} {element.localizer.SimpleAppLocalization(nameof(Translation.ShipStats_Max))} {element.localizer.SimpleAppLocalization(nameof(Translation.ShipStats_Damage))}";
        var columnTitleFireChanceReduction = element.localizer.SimpleAppLocalization(nameof(Translation.ShipStats_FireReduction));
        var columnTitleFloodingMaxAmount = $"{element.localizer.SimpleAppLocalization(nameof(Translation.ShipStats_Flooding))} {element.localizer.SimpleAppLocalization(nameof(Translation.ShipStats_Max))} {element.localizer.SimpleAppLocalization(nameof(Translation.ShipComparison_Amount))}";
        var columnTitleFloodingMaxDuration = $"{element.localizer.SimpleAppLocalization(nameof(Translation.ShipStats_Flooding))} {element.localizer.SimpleAppLocalization(nameof(Translation.ShipStats_Max))} {element.localizer.SimpleAppLocalization(nameof(Translation.ShipStats_Duration))}";
        var columnTitleFloodingDps = $"{element.localizer.SimpleAppLocalization(nameof(Translation.ShipStats_Flooding))} {element.localizer.SimpleAppLocalization(nameof(Translation.Unit_DPS))}";
        var columnTitleFloodingMaxDmg = $"{element.localizer.SimpleAppLocalization(nameof(Translation.ShipStats_Flooding))} {element.localizer.SimpleAppLocalization(nameof(Translation.ShipStats_Max))} {element.localizer.SimpleAppLocalization(nameof(Translation.ShipStats_Damage))}";
        var columnTitleFloodingChanceReduction = element.localizer.SimpleAppLocalization(nameof(Translation.ShipStats_TorpedoProtection));

        <PropertyColumn ID="@($"{dataSectionString}_{columnTitleHp}")" Hidden="@element.IsColumnHidden.Invoke(dataSectionString, columnTitleHp)" T="GridDataWrapper" TProperty="decimal" Property="@(x => x.Survivability.HitPoints)" Title="@columnTitleHp" HeaderClass="column-text-center" CellClass="column-text-center"/>

        <TemplateColumn ID="@($"{dataSectionString}_{columnDiveCapacity}")" Hidden="@element.IsColumnHidden.Invoke(dataSectionString, columnDiveCapacity)" SortBy="@(x => x.Survivability.DiveCapacity)" T="GridDataWrapper" Title="@columnDiveCapacity" HeaderClass="column-text-center" CellClass="column-text-center">
            <CellTemplate>
                @if (context.Item.Survivability.DiveCapacity != 0)
                {
                    <MudText Typo="Typo.body2">
                        @(context.Item.Survivability.DiveCapacity + unitU)
                    </MudText>
                }
                else
                {
                    @UtilityFragments.DataNotAvailableFragment
                }
            </CellTemplate>
        </TemplateColumn>

        <TemplateColumn ID="@($"{dataSectionString}_{columnDiveCapacityRechargeRate}")" Hidden="@element.IsColumnHidden.Invoke(dataSectionString, columnDiveCapacityRechargeRate)" SortBy="@(x => x.Survivability.DiveCapacityRechargeRate)" T="GridDataWrapper" Title="@columnDiveCapacityRechargeRate" HeaderClass="column-text-center" CellClass="column-text-center">
            <CellTemplate>
                @if (context.Item.Survivability.DiveCapacityRechargeRate != 0)
                {
                    <MudText Typo="Typo.body2">
                        @(context.Item.Survivability.DiveCapacityRechargeRate + unitUps)
                    </MudText>
                }
                else
                {
                    @UtilityFragments.DataNotAvailableFragment
                }
            </CellTemplate>
        </TemplateColumn>

        <PropertyColumn ID="@($"{dataSectionString}_{columnTitleFireMaxAmount}")" Hidden="@element.IsColumnHidden.Invoke(dataSectionString, columnTitleFireMaxAmount)" T="GridDataWrapper" TProperty="decimal" Property="@(x => x.Survivability.FireAmount)" Title="@columnTitleFireMaxAmount" HeaderClass="column-text-center" CellClass="column-text-center"/>

        <TemplateColumn ID="@($"{dataSectionString}_{columnTitleFireMaxDuration}")" Hidden="@element.IsColumnHidden.Invoke(dataSectionString, columnTitleFireMaxDuration)" T="GridDataWrapper" SortBy="@(x => x.Survivability.FireDuration)" Title="@columnTitleFireMaxDuration" HeaderClass="column-text-center" CellClass="column-text-center">
            <CellTemplate>
                @if (context.Item.Survivability.FireDuration != 0)
                {
                    <MudText Typo="Typo.body2">
                        @(context.Item.Survivability.FireDuration + unitS)
                    </MudText>
                }
                else
                {
                    @UtilityFragments.DataNotAvailableFragment
                }
            </CellTemplate>
        </TemplateColumn>

        <PropertyColumn ID="@($"{dataSectionString}_{columnTitleFireDps}")" Hidden="@element.IsColumnHidden.Invoke(dataSectionString, columnTitleFireDps)" T="GridDataWrapper" TProperty="decimal" Property="@(x => x.Survivability.FireDPS)" Title="@columnTitleFireDps" HeaderClass="column-text-center" CellClass="column-text-center"/>

        <PropertyColumn ID="@($"{dataSectionString}_{columnTitleFireMaxDmg}")" Hidden="@element.IsColumnHidden.Invoke(dataSectionString, columnTitleFireMaxDmg)" T="GridDataWrapper" TProperty="decimal" Property="@(x => x.Survivability.FireTotalDamage)" Title="@columnTitleFireMaxDmg" HeaderClass="column-text-center" CellClass="column-text-center"/>

        <TemplateColumn ID="@($"{dataSectionString}_{columnTitleFireChanceReduction}")" Hidden="@element.IsColumnHidden.Invoke(dataSectionString, columnTitleFireChanceReduction)" T="GridDataWrapper" SortBy="@(x => x.Survivability.FireReduction)" Title="@columnTitleFireChanceReduction" HeaderClass="column-text-center" CellClass="column-text-center">
            <CellTemplate>
                @if (context.Item.Survivability.FireReduction != 0)
                {
                    <MudText Typo="Typo.body2">
                        @(context.Item.Survivability.FireReduction + unitPerCent)
                    </MudText>
                }
                else
                {
                    @UtilityFragments.DataNotAvailableFragment
                }
            </CellTemplate>
        </TemplateColumn>

        <PropertyColumn ID="@($"{dataSectionString}_{columnTitleFloodingMaxAmount}")" Hidden="@element.IsColumnHidden.Invoke(dataSectionString, columnTitleFireMaxAmount)" T="GridDataWrapper" TProperty="decimal" Property="@(x => x.Survivability.FloodAmount)" Title="@columnTitleFloodingMaxAmount" HeaderClass="column-text-center" CellClass="column-text-center"/>

        <TemplateColumn ID="@($"{dataSectionString}_{columnTitleFloodingMaxDuration}")" Hidden="@element.IsColumnHidden.Invoke(dataSectionString, columnTitleFloodingMaxDuration)" T="GridDataWrapper" SortBy="@(x => x.Survivability.FloodDuration)" Title="@columnTitleFloodingMaxDuration" HeaderClass="column-text-center" CellClass="column-text-center">
            <CellTemplate>
                @if (context.Item.Survivability.FloodDuration != 0)
                {
                    <MudText Typo="Typo.body2">
                        @(context.Item.Survivability.FloodDuration + unitS)
                    </MudText>
                }
                else
                {
                    @UtilityFragments.DataNotAvailableFragment
                }
            </CellTemplate>
        </TemplateColumn>

        <PropertyColumn ID="@($"{dataSectionString}_{columnTitleFloodingDps}")" Hidden="@element.IsColumnHidden.Invoke(dataSectionString, columnTitleFloodingDps)" T="GridDataWrapper" TProperty="decimal" Property="@(x => x.Survivability.FloodDPS)" Title="@columnTitleFloodingDps" HeaderClass="column-text-center" CellClass="column-text-center"/>

        <PropertyColumn ID="@($"{dataSectionString}_{columnTitleFloodingMaxDmg}")" Hidden="@element.IsColumnHidden.Invoke(dataSectionString, columnTitleFloodingMaxDmg)" T="GridDataWrapper" TProperty="decimal" Property="@(x => x.Survivability.FloodTotalDamage)" Title="@columnTitleFloodingMaxDmg" HeaderClass="column-text-center" CellClass="column-text-center"/>

        <TemplateColumn ID="@($"{dataSectionString}_{columnTitleFloodingChanceReduction}")" Hidden="@element.IsColumnHidden.Invoke(dataSectionString, columnTitleFloodingChanceReduction)" T="GridDataWrapper" SortBy="@(x => x.Survivability.FloodTorpedoProtection)" Title="@columnTitleFloodingChanceReduction" HeaderClass="column-text-center" CellClass="column-text-center">
            <CellTemplate>
                @if (context.Item.Survivability.FloodTorpedoProtection != 0)
                {
                    <MudText Typo="Typo.body2">
                        @(context.Item.Survivability.FloodTorpedoProtection + unitPerCent)
                    </MudText>
                }
                else
                {
                    @UtilityFragments.DataNotAvailableFragment
                }
            </CellTemplate>
        </TemplateColumn>
    };
}
